{"version":3,"sources":["components/common.js","components/LanguagePicker.jsx","components/Editor.jsx","App.js","reportWebVitals.js","index.js"],"names":["supportedLanguages","id","name","LanguagePicker","props","className","value","find","x","onChange","e","onLanguageChange","target","options","map","lang","showOptions","memo","EditorWrapper","socket","editorRef","showValue","event","console","log","text","setState","code","state","isFirstime","mess","meetingCode","language","emit","bind","this","socketClient","process","on","channel","message","ack","height","width","theme","style","float","path","defaultLanguage","onMount","handleEditorDidMount","Component","App","useState","userCount","setLanguage","window","location","pathname","length","result","characters","charactersLength","i","charAt","Math","floor","random","makeId","replace","type","disabled","val","langua","parseInt","border","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMA2KeA,G,MA3KY,CAAC,CACxBC,GAAI,EACJC,KAAM,QACP,CACCD,GAAI,EACJC,KAAM,SACP,CACCD,GAAI,EACJC,KAAM,OACP,CACCD,GAAI,EACJC,KAAM,KACP,CACCD,GAAI,EACJC,KAAM,WACP,CACCD,GAAI,EACJC,KAAM,gBACP,CACCD,GAAI,EACJC,KAAM,OACP,CACCD,GAAI,EACJC,KAAM,UACP,CACCD,GAAI,EACJC,KAAM,OACP,CACCD,GAAI,GACJC,KAAM,OACP,CACCD,GAAI,GACJC,KAAM,cACP,CACCD,GAAI,GACJC,KAAM,UACP,CACCD,GAAI,GACJC,KAAM,MACP,CACCD,GAAI,GACJC,KAAM,WACP,CACCD,GAAI,GACJC,KAAM,cACP,CACCD,GAAI,GACJC,KAAM,QACP,CACCD,GAAI,GACJC,KAAM,OACP,CACCD,GAAI,GACJC,KAAM,QACP,CACCD,GAAI,GACJC,KAAM,cACP,CACCD,GAAI,GACJC,KAAM,QACP,CACCD,GAAI,GACJC,KAAM,UACP,CACCD,GAAI,GACJC,KAAM,QACP,CACCD,GAAI,GACJC,KAAM,OACP,CACCD,GAAI,GACJC,KAAM,YACP,CACCD,GAAI,GACJC,KAAM,SACP,CACCD,GAAI,GACJC,KAAM,SACP,CACCD,GAAI,GACJC,KAAM,eACP,CACCD,GAAI,GACJC,KAAM,UACP,CACCD,GAAI,GACJC,KAAM,QACP,CACCD,GAAI,GACJC,KAAM,SACP,CACCD,GAAI,GACJC,KAAM,OACP,CACCD,GAAI,GACJC,KAAM,aACP,CACCD,GAAI,GACJC,KAAM,YACP,CACCD,GAAI,GACJC,KAAM,cACP,CACCD,GAAI,GACJC,KAAM,cACP,CACCD,GAAI,GACJC,KAAM,OACP,CACCD,GAAI,GACJC,KAAM,UACP,CACCD,GAAI,GACJC,KAAM,KACP,CACCD,GAAI,GACJC,KAAM,SACP,CACCD,GAAI,GACJC,KAAM,SACP,CACCD,GAAI,GACJC,KAAM,YACP,CACCD,GAAI,GACJC,KAAM,QACP,CACCD,GAAI,GACJC,KAAM,QACP,CACCD,GAAI,GACJC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","file":"static/js/main.ccc86a60.chunk.js","sourcesContent":["const supportedLanguages = [{\r\n    id: 1,\r\n    name: 'apex'\r\n}, {\r\n    id: 2,\r\n    name: 'azcli'\r\n}, {\r\n    id: 3,\r\n    name: 'bat'\r\n}, {\r\n    id: 4,\r\n    name: 'c'\r\n}, {\r\n    id: 5,\r\n    name: 'clojure'\r\n}, {\r\n    id: 6,\r\n    name: 'coffeescript'\r\n}, {\r\n    id: 7,\r\n    name: 'cpp'\r\n}, {\r\n    id: 8,\r\n    name: 'csharp'\r\n}, {\r\n    id: 9,\r\n    name: 'csp'\r\n}, {\r\n    id: 10,\r\n    name: 'css'\r\n}, {\r\n    id: 11,\r\n    name: 'dockerfile'\r\n}, {\r\n    id: 12,\r\n    name: 'fsharp'\r\n}, {\r\n    id: 13,\r\n    name: 'go'\r\n}, {\r\n    id: 14,\r\n    name: 'graphql'\r\n}, {\r\n    id: 15,\r\n    name: 'handlebars'\r\n}, {\r\n    id: 16,\r\n    name: 'html'\r\n}, {\r\n    id: 17,\r\n    name: 'ini'\r\n}, {\r\n    id: 18,\r\n    name: 'java'\r\n}, {\r\n    id: 19,\r\n    name: 'javascript'\r\n}, {\r\n    id: 20,\r\n    name: 'json'\r\n}, {\r\n    id: 21,\r\n    name: 'kotlin'\r\n}, {\r\n    id: 22,\r\n    name: 'less'\r\n}, {\r\n    id: 23,\r\n    name: 'lua'\r\n}, {\r\n    id: 24,\r\n    name: 'markdown'\r\n}, {\r\n    id: 25,\r\n    name: 'msdax'\r\n}, {\r\n    id: 26,\r\n    name: 'mysql'\r\n}, {\r\n    id: 27,\r\n    name: 'objective-c'\r\n}, {\r\n    id: 28,\r\n    name: 'pascal'\r\n}, {\r\n    id: 29,\r\n    name: 'perl'\r\n}, {\r\n    id: 30,\r\n    name: 'pgsql'\r\n}, {\r\n    id: 31,\r\n    name: 'php'\r\n}, {\r\n    id: 32,\r\n    name: 'plaintext'\r\n}, {\r\n    id: 33,\r\n    name: 'postiats'\r\n}, {\r\n    id: 34,\r\n    name: 'powerquery'\r\n}, {\r\n    id: 35,\r\n    name: 'powershell'\r\n}, {\r\n    id: 36,\r\n    name: 'pug'\r\n}, {\r\n    id: 37,\r\n    name: 'python'\r\n}, {\r\n    id: 38,\r\n    name: 'r'\r\n}, {\r\n    id: 39,\r\n    name: 'razor'\r\n}, {\r\n    id: 40,\r\n    name: 'redis'\r\n}, {\r\n    id: 41,\r\n    name: 'redshift'\r\n}, {\r\n    id: 42,\r\n    name: 'ruby'\r\n}, {\r\n    id: 43,\r\n    name: 'rust'\r\n}, {\r\n    id: 44,\r\n    name: 'sb'\r\n}, {\r\n    id: 45,\r\n    name: 'scheme'\r\n}, {\r\n    id: 46,\r\n    name: 'scss'\r\n}, {\r\n    id: 47,\r\n    name: 'shell'\r\n}, {\r\n    id: 48,\r\n    name: 'sol'\r\n}, {\r\n    id: 49,\r\n    name: 'sql'\r\n}, {\r\n    id: 50,\r\n    name: 'st'\r\n}, {\r\n    id: 51,\r\n    name: 'swift'\r\n}, {\r\n    id: 52,\r\n    name: 'tcl'\r\n}, {\r\n    id: 53,\r\n    name: 'typescript'\r\n}, {\r\n    id: 54,\r\n    name: 'vb'\r\n}, {\r\n    id: 55,\r\n    name: 'xml'\r\n}, {\r\n    id: 56,\r\n    name: 'yaml'\r\n}];\r\n\r\n\r\nexport default supportedLanguages;","import React, { memo } from 'react'\r\n\r\nimport supportedLanguages from './common'\r\n\r\nfunction LanguagePicker(props) {\r\n    \r\n    var showOptions = function () {\r\n        const options = supportedLanguages.map((lang) => {\r\n\r\n            return <option value={lang.id} key={lang.id}>{lang.name}</option>;\r\n        })\r\n        return <> {options} </>\r\n    }\r\n    return (\r\n        <select className=\"language-picker\" value={supportedLanguages.find(x => x.name === props.value).id || 19} onChange={(e) => {\r\n            props.onLanguageChange(e.target.value)\r\n        }}>\r\n            {showOptions()}\r\n\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default memo(LanguagePicker)\r\n","import React, { Component } from 'react'\r\nimport Editor from \"@monaco-editor/react\";\r\nimport socketClient from \"socket.io-client\";\r\nconst {REACT_APP_BACKEND } = process.env;\r\nconst SERVER = REACT_APP_BACKEND;\r\n\r\n\r\nexport default class EditorWrapper extends Component {\r\n\r\n\r\n    socket = null;\r\n    editorRef = null;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            language: props.language, \r\n            code: props.code, \r\n            meetingCode: props.meetingCode, \r\n            isFirstime : true\r\n        }\r\n        console.log(this.state)\r\n        this.showValue.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.socket = socketClient(SERVER);\r\n\r\n        this.socket.on('connection', () => {\r\n            console.log('connected');\r\n        });\r\n        this.socket.on('channel', channel => {\r\n            if (channel.meetingCode === this.props.meetingCode)\r\n                this.setState({ code: channel.text , language:channel.language , meetingCode: channel.meetingCode})\r\n        });\r\n        this.socket.on('coded', message => {\r\n             if (message.meetingCode === this.props.meetingCode)\r\n                 this.setState({ code: message.text , language:message.language , meetingCode: message.meetingCode})\r\n        });\r\n        this.socket.emit('channel-join', this.state.meetingCode, ack => {\r\n            console.log('channel Joined', ack)\r\n        });\r\n    }\r\n\r\n    showValue = (value, event) => {\r\n        console.log(value, event)\r\n        const text = value;\r\n        this.setState({code : text});\r\n        if(!this.state.isFirstime){\r\n            const mess = { \r\n                meetingCode : this.props.meetingCode, \r\n                text , \r\n                language : this.state.language  \r\n            }\r\n            console.log(mess)\r\n            this.socket.emit('coded', mess);\r\n            console.log(\"Show value happned\" , text  );\r\n        }else{\r\n            this.setState({isFirstime : false})\r\n        }\r\n       \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n\r\n                <Editor\r\n                    height=\"100vh\"\r\n                    width=\"90vw\"\r\n                    theme=\"vs-dark\"\r\n                    style={{ float: 'left' }}\r\n                    onChange={this.showValue}\r\n                    path={this.state.language}\r\n                    defaultLanguage={this.state.language}\r\n                    value={this.state.code}\r\n                    //defaultValue={code}\r\n                    onMount={this.handleEditorDidMount}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import './App.css';\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport LanguagePicker from './components/LanguagePicker';\r\nimport EditorWrapper from './components/Editor'\r\nimport supportedLanguages from './components/common' \r\n\r\n\r\nfunction App() {\r\n  function makeId(length) {\r\n    var result = '';\r\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for (var i = 0; i < length; i++) {\r\n      result += characters.charAt(Math.floor(Math.random() *\r\n      charactersLength));\r\n    }\r\n    return result;\r\n  }\r\n  \r\n  const [code, setCode] = useState('// write code here...')\r\n  const [userCount, setuserCount] = useState(0)\r\n  const [language, setLanguage] = useState('javascript')\r\n\r\n  const meetingCode = window.location.pathname === \"/\" ? makeId(8) : window.location.pathname.replace(\"/\" , \"\");\r\n  if(window.location.pathname == \"/\"){\r\n    window.location.pathname = \"/\" + meetingCode\r\n  }\r\n   \r\n  function onLanguageChange(lang) {\r\n    \r\n    const langua = supportedLanguages.find((x) => x.id === parseInt(lang))    \r\n    setLanguage(langua.name)\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <input value={meetingCode} type=\"text\" disabled=\"true\" />\r\n      <LanguagePicker value={language} onLanguageChange={(val) => onLanguageChange(val)} />\r\n      Users:{userCount}\r\n      <br />\r\n      <div style={{ width: '100%', border: '1px solid red' }}>\r\n        <EditorWrapper language={language} meetingCode={meetingCode} code={code} />\r\n        <pre>\r\n        {code}\r\n        </pre>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}